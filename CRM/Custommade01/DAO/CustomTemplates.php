<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC https://civicrm.org/licensing
 *
 * Generated from /buildkit/build/dmaster/web/sites/default/files/civicrm/ext/com.civicrm.custommade01/xml/schema/CRM/Custommade01/CustomTemplates.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:a9e53bb9da99c3cf22df7779986f267c)
 */

/**
 * Database access object for the CustomTemplates entity.
 */
class CRM_Custommade01_DAO_CustomTemplates extends CRM_Core_DAO {

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'civicrm_custom_templates';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = TRUE;

  /**
   * Unique CustomTemplates ID
   *
   * @var int
   */
  public $id;

  /**
   * message title
   *
   * @var string
   */
  public $msg_title;

  /**
   * message template
   *
   * @var longtext
   */
  public $msg_template;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_custom_templates';
    parent::__construct();
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => CRM_Custommade01_ExtensionUtil::ts('Unique CustomTemplates ID'),
          'required' => TRUE,
          'where' => 'civicrm_custom_templates.id',
          'table_name' => 'civicrm_custom_templates',
          'entity' => 'CustomTemplates',
          'bao' => 'CRM_Custommade01_DAO_CustomTemplates',
          'localizable' => 0,
        ],
        'msg_title' => [
          'name' => 'msg_title',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => CRM_Custommade01_ExtensionUtil::ts('msg_title'),
          'description' => CRM_Custommade01_ExtensionUtil::ts('message title'),
          'size' => CRM_Utils_Type::TWO,
          'where' => 'civicrm_custom_templates.msg_title',
          'table_name' => 'civicrm_custom_templates',
          'entity' => 'CustomTemplates',
          'bao' => 'CRM_Custommade01_DAO_CustomTemplates',
          'localizable' => 0,
        ],
        'msg_template' => [
          'name' => 'msg_template',
          'type' => CRM_Utils_Type::T_LONGTEXT,
          'title' => CRM_Custommade01_ExtensionUtil::ts('msg_template'),
          'description' => CRM_Custommade01_ExtensionUtil::ts('message template'),
          'where' => 'civicrm_custom_templates.msg_template',
          'table_name' => 'civicrm_custom_templates',
          'entity' => 'CustomTemplates',
          'bao' => 'CRM_Custommade01_DAO_CustomTemplates',
          'localizable' => 0,
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Return a mapping from field-name to the corresponding key (as used in fields()).
   *
   * @return array
   *   Array(string $name => string $uniqueName).
   */
  public static function &fieldKeys() {
    if (!isset(Civi::$statics[__CLASS__]['fieldKeys'])) {
      Civi::$statics[__CLASS__]['fieldKeys'] = array_flip(CRM_Utils_Array::collect('name', self::fields()));
    }
    return Civi::$statics[__CLASS__]['fieldKeys'];
  }

  /**
   * Returns the names of this table
   *
   * @return string
   */
  public static function getTableName() {
    return self::$_tableName;
  }

  /**
   * Returns if this table needs to be logged
   *
   * @return bool
   */
  public function getLog() {
    return self::$_log;
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'custom_templates', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'custom_templates', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
